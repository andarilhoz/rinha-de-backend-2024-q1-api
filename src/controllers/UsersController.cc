/**
 *
 *  UsersController.cc
 *  This file is generated by drogon_ctl
 *
 */

#include "UsersController.h"
#include <string>


void UsersController::getOne(const HttpRequestPtr &req,
                             std::function<void(const HttpResponsePtr &)> &&callback,
                             std::string &&id)
{
    auto callbackPtr = std::make_shared<std::function<void(const HttpResponsePtr &)>>(std::move(callback));
    auto dbClientPtr = drogon::app().getDbClient();
    
    if(!dbClientPtr){
        LOG_ERROR << "DB not initialized";
    }
    
    Mapper<Transacoes> mapper(dbClientPtr);

    auto criteria = Criteria(Transacoes::Cols::_cliente_id, CompareOperator::EQ, id);
    mapper.findOne(criteria, 
    [=](const Transacoes &transacao){
        auto json = Json::Value();
                    json["transacao"] = transacao.toJson();
                    auto resp = HttpResponse::newHttpJsonResponse(json);
                    (*callbackPtr)(resp);

    },[callbackPtr](const DrogonDbException &e){
        const drogon::orm::UnexpectedRows *s = dynamic_cast<const drogon::orm::UnexpectedRows *>(&e.base());
        if(s) {
            auto resp = HttpResponse::newHttpResponse();
            resp->setStatusCode(k404NotFound);
            (*callbackPtr)(resp);
            return;
        }

        LOG_ERROR << e.base().what();
                auto resp = HttpResponse::newHttpResponse();
                resp->setStatusCode(HttpStatusCode::k500InternalServerError);
                (*callbackPtr)(resp);
    });
}
